{"version":3,"sources":["dom.js"],"names":["window","dom","create","string","container","document","createElement","innerHTML","trim","content","firstChild","after","node","node2","console","log","nextSibling","parentNode","insertBefore","before","append","parent","appendChild","wrap","remove","removeChild","empty","childNodes","array","x","push","attr","name","value","arguments","length","setAttribute","getAttribute","text","innerText","textContent","html","style","Object","object","key","class","add","className","classList","has","contains","on","eventName","fn","addEventListener","off","removeEventListener","find","selector","scope","querySelectorAll","children","siblings","Array","from","filter","n","next","nodeType","previous","previousSibling","each","nodeList","i","call","index","list"],"mappings":"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","file":"dom.fc073b5d.map","sourceRoot":"..\\src","sourcesContent":["window.dom = {\r\n    // create: function() {}\r\n    // create(tagName) {\r\n    //     return document.createElement(tagName)\r\n    // }\r\n    create(string) {\r\n        // const container = document.createElement('div')\r\n        // div里面是不能放td的，td只能出现在table或者tr元素里面\r\n        //template是万能的创建方法\r\n        const container = document.createElement(\"template\")\r\n        // container.innerHTML = string\r\n        // return container.children[0]\r\n        container.innerHTML = string.trim() //把字符串两边的空格给去掉\r\n        // return container.children[0]\r\n        return container.content.firstChild\r\n    },\r\n    //test, node2:<div>newDiv</div>，node2为新增节点\r\n    //相当于在node后面的接口的前面插\r\n    after(node, node2) {\r\n        console.log('node.nextSibling', node.nextSibling)\r\n\r\n        //把node2插到node的下一个节点的前面\r\n        node.parentNode.insertBefore(node2, node.nextSibling) //在参考节点之前插入一个拥有指定父节点的子节点\r\n    },\r\n    before(node, node2) {\r\n        node.parentNode.insertBefore(node2, node);\r\n    },\r\n    append(parent, node) {\r\n        parent.appendChild(node)\r\n    },\r\n    //dom.wrap(div2,div3)\r\n    wrap(node, parent) {\r\n        dom.before(node, parent)\r\n        dom.append(parent, node)\r\n    },\r\n    remove(node) {\r\n        node.parentNode.removeChild(node)\r\n        return node\r\n    },\r\n    empty(node) {\r\n        // node.innerHTML = ''\r\n        const {\r\n            childNodes\r\n        } = node\r\n        const array = []\r\n        let x = node.firstChild\r\n        while (x) {\r\n            array.push(dom.remove(node.firstChild))\r\n            x = node.firstChild\r\n        }\r\n        return array\r\n    },\r\n    attr(node, name, value) { // 重载\r\n        if (arguments.length === 3) {\r\n            node.setAttribute(name, value)\r\n        } else if (arguments.length === 2) {\r\n            return node.getAttribute(name)\r\n        }\r\n    },\r\n    text(node, string) { //适配\r\n        console.log('innerText' in node)\r\n        if (arguments.length === 2) {\r\n            if ('innerText' in node) {\r\n                node.innerText = string\r\n            } else {\r\n                node.textContent = string\r\n            }\r\n        } else if (arguments.length === 1) {\r\n            if ('innerText' in node) {\r\n                return node.innerText\r\n            } else {\r\n                return node.textContent\r\n            }\r\n        }\r\n\r\n    },\r\n    html(node, string) {\r\n        if (arguments.length === 2) {\r\n            node.innerHTML = string\r\n        } else if (arguments.length === 1) {\r\n            return node.innerHTML\r\n        }\r\n    },\r\n    style(node, name, value) {\r\n        if (arguments.length === 3) {\r\n            // dom.style(div,'color','red')\r\n            node.style[name] = value\r\n        } else if (arguments.length === 2) {\r\n            if (typeof name === 'string') {\r\n                //dom.style(div,'color')\r\n                return node.style[name]\r\n            } else if (name instanceof Object) {\r\n                //dom.style(div,{color:'red'})\r\n                const object = name\r\n                for (let key in object) {\r\n                    node.style[key] = object[key]\r\n                }\r\n            }\r\n        }\r\n        // for(let key in object) {\r\n        //     //key: border / color\r\n        //     //node.style.border = ...\r\n        //     //node.style.color = ...\r\n        //     node.style[key] = object[key]\r\n        // }\r\n    },\r\n    class: {\r\n        add(node, className) {\r\n            node.classList.add(className)\r\n        },\r\n        remove(node, className) {\r\n            node.classList.remove(className)\r\n        },\r\n        has(node, className) {\r\n            return node.classList.contains(className)\r\n        }\r\n    },\r\n    on(node, eventName, fn) {\r\n        node.addEventListener(eventName, fn)\r\n    },\r\n    off(node, eventName, fn) {\r\n        node.removeEventListener(eventName, fn)\r\n    },\r\n    find(selector, scope) {\r\n        return (scope || document).querySelectorAll(selector)\r\n    },\r\n    parent(node) {\r\n        return node.parentNode\r\n    },\r\n    children(node) {\r\n        return node.children\r\n    },\r\n    siblings(node) {\r\n        return Array.from(node.parentNode.children).filter(n => n !== node)\r\n    },\r\n    next(node) {\r\n        let x = node.nextSibling\r\n        while (x && x.nodeType === 3) {\r\n            x = x.nextSibling\r\n        }\r\n        return x\r\n    },\r\n    previous(node) {\r\n        let x = node.previousSibling\r\n        while (x && x.nodeType === 3) {\r\n            x = x.previousSibling\r\n        }\r\n        return x\r\n    },\r\n    each(nodeList,fn) {\r\n        for(let i=0;i<nodeList.length;i++) {\r\n            fn.call(null,nodeList[i])\r\n        }\r\n    },\r\n    index(node) {\r\n        const list = dom.children(node.parentNode)\r\n        let i\r\n        for(i =0 ;i<list.length;i++) {\r\n            if(list[i] === node) {\r\n                break\r\n            }\r\n        }\r\n        return i\r\n    }\r\n}\r\n\r\n// window.dom.create = function() {};"]}